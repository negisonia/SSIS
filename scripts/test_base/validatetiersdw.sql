CREATE OR REPLACE FUNCTION validatetiersdata()-- DATA WAREHOUSE
RETURNS BOOLEAN AS $$
DECLARE
SUCCESS BOOLEAN DEFAULT FALSE;
FF_TIERS_COUNT INTEGER;-- FF SOURCE DATA TIERS COUNT
FE_TIERS_COUNT INTEGER;-- FE SCHEMA TIERS COUNT 
DW_FF_TIERS_COUNT INTEGER;-- TIERS MATERIALIZED VIEW COUNT 
FF_FE_MERGED_TIERS_COUNT INTEGER;-- FE AND FF SOURCE DATA MERGED TIERS COUNT
FF_DW_MERGED_TIERS_COUNT INTEGER;-- TIERS MATERIALIZED VIEW AND FF SOURCE DATA MERGED COUNT
BEGIN
--COUNT TIERS IN FF SOURCE DATABASE
SELECT COUNT(*) INTO FF_TIERS_COUNT FROM ff.tier_import  ffti WHERE ffti.is_active=TRUE;

--COUNT TIERS PLANS IN FE SCHEMA
SELECT COUNT(*) INTO FE_TIERS_COUNT FROM fe.tiers feti;

--COUNT TIERS IN DW MATERIALIZED VIEW
SELECT COUNT(*) INTO DW_FF_TIERS_COUNT FROM ff.tier;

--IF FE SCHEMA AND FF SOURCE DATA HAVE EQUAL COUNTS
IF FF_TIERS_COUNT = FE_TIERS_COUNT THEN
	SELECT COUNT(*) INTO FF_FE_MERGED_TIERS_COUNT FROM ff.tier_import ffti JOIN fe.tiers feti ON ffti.id=feti.id AND ffti.is_active=TRUE AND ffti.is_active=feti.is_active AND ffti.name=feti.name AND ffti.abbreviation=feti.abbreviation AND ffti.explanation_text=feti.explanation_text AND ffti.ordering_index=feti.ordering_index;
	--VALIDATE IF FF SOURCE DATA AND FE SCHEMAS HAVE THE SAME RECORDS
	IF FF_TIERS_COUNT = FF_FE_MERGED_TIERS_COUNT THEN
		SUCCESS :=TRUE;
	ELSE
		RAISE EXCEPTION 'FF AND FE SCHEMAS CONTAINS DIFFERENT TIERS';
		SUCCESS:=FALSE; 	
	END IF;
ELSE
		RAISE EXCEPTION 'FF AND FE SCHEMAS CONTAINS DIFFERENT TIERS';
		SUCCESS:=FALSE; 
END IF;

--IF FF SOURCE DATA AND TIERS MATERIALIZED VIEW HAVE EQUAL COUNTS
IF FF_TIERS_COUNT = DW_FF_TIERS_COUNT THEN
	SELECT COUNT(*) INTO FF_DW_MERGED_TIERS_COUNT FROM ff.tier_import ffti JOIN ff.tier fti ON ffti.id=fti.id AND ffti.is_active=TRUE AND ffti.is_active=fti.is_active AND ffti.name=fti.name AND ffti.abbreviation=fti.abbreviation AND ffti.explanation_text=fti.explanation_text AND ffti.ordering_index=fti.ordering_index;
	--VALIDATE IF FF SOURCE DATA AND TIERS MATERIALIZED VIEW HAVE THE SAME RECORDS
	IF FF_TIERS_COUNT = FF_DW_MERGED_TIERS_COUNT THEN
		SUCCESS :=TRUE;
	ELSE
		RAISE EXCEPTION 'FF AND DW SCHEMAS CONTAINS DIFFERENT DRUGS';
		SUCCESS:=FALSE; 	
	END IF;
ELSE 
		RAISE EXCEPTION 'FF AND DW SCHEMAS CONTAINS DIFFERENT DRUGS';
		SUCCESS:=FALSE; 
END IF;

RETURN SUCCESS;
END
$$ LANGUAGE plpgsql;