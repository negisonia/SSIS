CREATE OR REPLACE FUNCTION validatedrugsdata()-- FRONT END
RETURNS BOOLEAN AS $$
DECLARE
SUCCESS BOOLEAN DEFAULT FALSE;
FF_DRUGS_COUNT INTEGER;-- FF SOURCE DATA DRUGS COUNT
FE_DRUGS_COUNT INTEGER;-- FE SCHEMA DRUGS COUNT 
FF_FE_MERGED_DRUGS_COUNT INTEGER;-- FE FF SOURCE DATA MERGED DRUGS COUNT
BEGIN
--COUNT DRUGS IN FF SOURCE DATABASE
SELECT COUNT(*) INTO FF_DRUGS_COUNT FROM ff.drugs_import  ffd WHERE ffd.is_active=TRUE;

--COUNT DRUGS IN FRONT END HEALTH PLANS MATERIALIZED VIEW
SELECT COUNT(*) INTO FE_DRUGS_COUNT FROM drugs hp;


--IF SOURCE DATA END MATERIALIZED VIEW HAVE EQUAL COUNTS
IF FF_DRUGS_COUNT = FE_DRUGS_COUNT THEN
	SELECT COUNT(*) INTO FF_FE_MERGED_DRUGS_COUNT FROM ff.drugs_import ffd JOIN drugs d ON ffd.id=d.id AND ffd.is_active=d.is_active AND ffd.name=d.name;
	--VALIDATE IF FF SOURCE DATA AND FRONT END HEALTH PLANS MATERIALIZED VIEW HAVE THE SAME RECORDS
	IF FF_DRUGS_COUNT = FF_FE_MERGED_DRUGS_COUNT THEN
		SUCCESS :=TRUE;
	ELSE
		RAISE EXCEPTION 'FF SOURCE DATA AND FRONT END HEALTH PLANS MATERIALIZED VIEW CONTAINS DIFFERENT HEALTHPLANS';
		SUCCESS:=FALSE; 	
	END IF;
ELSE
	RAISE EXCEPTION 'FF SOURCE DATA AND FRONT END HEALTH PLANS MATERIALIZED VIEW CONTAINS DIFFERENT HEALTHPLANS';
	SUCCESS:=FALSE;
END IF;

RETURN SUCCESS;
END
$$ LANGUAGE plpgsql;