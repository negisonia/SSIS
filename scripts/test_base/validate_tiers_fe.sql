CREATE OR REPLACE FUNCTION validate_tiers_data()-- FRONT END
RETURNS BOOLEAN AS $$
DECLARE
SUCCESS BOOLEAN DEFAULT FALSE;
FF_TIERS_COUNT INTEGER;-- FF SOURCE DATA TIERS COUNT
FE_TIERS_COUNT INTEGER;-- FE SCHEMA TIERS COUNT 
FF_FE_MERGED_TIERS_COUNT INTEGER;-- FE FF SOURCE DATA MERGED TIERS COUNT
BEGIN
--COUNT TIERS IN FF SOURCE DATABASE
SELECT COUNT(*) INTO FF_TIERS_COUNT FROM ff.tier_import ffti WHERE ffti.is_active=TRUE;

--COUNT TIERS IN FRONT END TIERS MATERIALIZED VIEW
SELECT COUNT(*) INTO FE_TIERS_COUNT FROM tiers t;


--IF SOURCE DATA END MATERIALIZED VIEW HAVE EQUAL COUNTS
IF FF_TIERS_COUNT = FE_TIERS_COUNT THEN
	SELECT COUNT(*) INTO FF_FE_MERGED_TIERS_COUNT FROM ff.tier_import ffti JOIN tiers t ON ffti.id=t.id AND ffti.is_active=TRUE AND ffti.is_active=t.is_active AND ffti.name=t.name AND ffti.abbreviation=t.abbreviation AND ffti.explanation_text=t.explanation_text AND ffti.ordering_index=t.ordering_index;
	--VALIDATE IF FF SOURCE DATA AND FRONT END HEALTH PLANS MATERIALIZED VIEW HAVE THE SAME RECORDS
	IF FF_TIERS_COUNT = FF_FE_MERGED_TIERS_COUNT THEN
		SUCCESS :=TRUE;
	ELSE
		select throw_error('FF SOURCE DATA AND FRONT END MATERIALIZED VIEW CONTAINS DIFFERENT TIERS');
		SUCCESS:=FALSE; 	
	END IF;
ELSE
	select throw_error('FF SOURCE DATA AND FRONT END MATERIALIZED VIEW CONTAINS DIFFERENT TIERS');
	SUCCESS:=FALSE;
END IF;

RETURN SUCCESS;
END
$$ LANGUAGE plpgsql;
