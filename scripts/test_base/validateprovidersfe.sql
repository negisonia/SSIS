CREATE OR REPLACE FUNCTION validateprovidersdata()-- FRONT END
RETURNS BOOLEAN AS $$
DECLARE
SUCCESS BOOLEAN DEFAULT FALSE;
FF_PROVIDERS_COUNT INTEGER;-- FF SOURCE DATA TIERS COUNT
FE_PROVIDERS_COUNT INTEGER;-- FE SCHEMA TIERS COUNT 
FF_FE_MERGED_PROVIDER_COUNT INTEGER;-- FE FF SOURCE DATA MERGED TIERS COUNT
BEGIN
--COUNT TIERS IN FF SOURCE DATABASE
SELECT COUNT(*) INTO FF_PROVIDERS_COUNT FROM ff.providers_import ffpi WHERE ffpi.is_active=TRUE;

--COUNT TIERS IN FRONT END TIERS MATERIALIZED VIEW
SELECT COUNT(*) INTO FE_PROVIDERS_COUNT FROM providers p;


--IF SOURCE DATA END MATERIALIZED VIEW HAVE EQUAL COUNTS
IF FF_PROVIDERS_COUNT = FE_PROVIDERS_COUNT THEN
	SELECT COUNT(*) INTO FF_FE_MERGED_PROVIDER_COUNT FROM ff.providers_import ffpi JOIN providers p ON ffpi.id=p.id AND ffpi.is_active=TRUE AND ffpi.is_active=p.is_active AND ffpi.name=p.name;
	--VALIDATE IF FF SOURCE DATA AND FRONT END HEALTH PLANS MATERIALIZED VIEW HAVE THE SAME RECORDS
	IF FF_PROVIDERS_COUNT = FF_FE_MERGED_PROVIDER_COUNT THEN
		SUCCESS :=TRUE;
	ELSE
		RAISE EXCEPTION 'FF SOURCE DATA AND FRONT END MATERIALIZED VIEW CONTAINS DIFFERENT PROVIDERS';	
	END IF;
ELSE
	RAISE EXCEPTION 'FF SOURCE DATA AND FRONT END MATERIALIZED VIEW CONTAINS DIFFERENT PROVIDERS';

END IF;

RETURN SUCCESS;
END
$$ LANGUAGE plpgsql;