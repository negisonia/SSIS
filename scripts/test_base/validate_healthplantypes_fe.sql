CREATE OR REPLACE FUNCTION validate_healthplantypes_data()--FRONT END
RETURNS BOOLEAN AS $$
DECLARE
SUCCESS BOOLEAN DEFAULT FALSE;
FF_HEALTH_PLAN_TYPES_COUNT INTEGER;-- FF SOURCE DATA DRUGS COUNT
FE_HEALTH_PLAN_TYPES_COUNT INTEGER;-- FE SCHEMA VIEW COUNT 
FF_FE_MERGED_HEALTH_PLAN_TYPES_COUNT INTEGER;-- FE FF SOURCE DATA MERGED HEALTH_PLAN_TYPES COUNT

BEGIN
--COUNT HEALTH_PLAN_TYPES IN FF SOURCE DATABASE
SELECT COUNT(*) INTO FF_HEALTH_PLAN_TYPES_COUNT FROM ff.health_plan_types_import  ffhpt WHERE ffhpt.is_active=TRUE;

--COUNT HEALTH_PLAN_TYPES IN FRONT END HEALTH PLANS MATERIALIZED VIEW
SELECT COUNT(*) INTO FE_HEALTH_PLAN_TYPES_COUNT FROM health_plan_types;

--IF SOURCE DATA AND DW MATERIALIZED VIEW HAVE EQUAL COUNTS
IF FF_HEALTH_PLAN_TYPES_COUNT = FE_HEALTH_PLAN_TYPES_COUNT THEN
	SELECT COUNT(*) INTO FF_FE_MERGED_HEALTH_PLAN_TYPES_COUNT FROM ff.health_plan_types_import ffhpt JOIN health_plan_types hpt ON ffhpt.id=hpt.id AND ffhpt.is_active=TRUE AND ffhpt.is_active=hpt.is_active AND ffhpt.name=hpt.name;
	--VALIDATE IF FF SOURCE DATA AND FRONT END HEALTH PLANS MATERIALIZED VIEW HAVE THE SAME RECORDS
	IF FF_HEALTH_PLAN_TYPES_COUNT = FF_FE_MERGED_HEALTH_PLAN_TYPES_COUNT THEN
		SUCCESS :=TRUE;
	ELSE
		select throw_error('FF SOURCE DATA AND FRONT END HEALTH PLAN TYPES MATERIALIZED VIEW CONTAINS DIFFERENT HEALTHPLANS');	
	END IF;
ELSE
	select throw_error('FF SOURCE DATA AND FRONT END HEALTH PLAN TYPES CONTAINS DIFFERENT DATA');
END IF;

RETURN SUCCESS;
END
$$ LANGUAGE plpgsql;
